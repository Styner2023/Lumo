
if(USE_SHARED_LIBS)
	set(BUILD_SHARED_LIBS ON CACHE BOOL "" FORCE)
	set(LLVM_USE_CRT_DEBUG MDd CACHE STRING "" FORCE)
	set(LLVM_USE_CRT_MINSIZEREL MD CACHE STRING "" FORCE)
	set(LLVM_USE_CRT_RELEASE MD CACHE STRING "" FORCE)
	set(LLVM_USE_CRT_RELWITHDEBINFO MD CACHE STRING "" FORCE)
	set(USE_MSVC_RUNTIME_LIBRARY_DLL ON CACHE BOOL "")
else()
	set(BUILD_SHARED_LIBS OFF CACHE BOOL "" FORCE)
	set(LLVM_USE_CRT_DEBUG MTd CACHE STRING "" FORCE)
	set(LLVM_USE_CRT_MINSIZEREL MT CACHE STRING "" FORCE)
	set(LLVM_USE_CRT_RELEASE MT CACHE STRING "" FORCE)
	set(LLVM_USE_CRT_RELWITHDEBINFO MT CACHE STRING "" FORCE)
	set(USE_MSVC_RUNTIME_LIBRARY_DLL OFF CACHE BOOL "")
endif()

if (BUILD_SHARED_LIBS)
	set(USE_MSVC_RUNTIME_LIBRARY_DLL ON CACHE BOOL "" FORCE)
	add_library(tinyxml2 ${CMAKE_SOURCE_DIR}/3rdparty/tinyxml2/tinyxml2.cpp ${CMAKE_SOURCE_DIR}/3rdparty/tinyxml2/tinyxml2.h)
	target_compile_definitions(tinyxml2 INTERFACE BUILD_SHARED_LIBS)
	set_target_properties(tinyxml2 PROPERTIES POSITION_INDEPENDENT_CODE ON)
	set_target_properties(tinyxml2 PROPERTIES DEFINE_SYMBOL "TINYXML2_EXPORT")
else()
	set(USE_MSVC_RUNTIME_LIBRARY_DLL OFF CACHE BOOL "" FORCE)
	add_library(tinyxml2 STATIC ${CMAKE_SOURCE_DIR}/3rdparty/tinyxml2/tinyxml2.cpp ${CMAKE_SOURCE_DIR}/3rdparty/tinyxml2/tinyxml2.h)
endif()

set_target_properties(tinyxml2 PROPERTIES RUNTIME_OUTPUT_NAME_DEBUG "tinyxml2d")

if(USE_SHARED_LIBS)
	set_target_properties(tinyxml2 PROPERTIES FOLDER 3rdparty/Shared)
else()
	set_target_properties(tinyxml2 PROPERTIES FOLDER 3rdparty/Static)
endif()

set_target_properties(tinyxml2 PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${FINAL_BIN_DIR}")
set_target_properties(tinyxml2 PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${FINAL_BIN_DIR}")
set_target_properties(tinyxml2 PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${FINAL_BIN_DIR}")

set(TINYXML2_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/3rdparty/tinyxml2)
set(TINYXML2_LIBRARIES tinyxml2)
set(TINYXML2_LIB_DIR ${CMAKE_CURRENT_BINARY_DIR})
