name: Linux Lumo Debug Package

on: 
  push:
    branches:
    - master
    paths-ignore:
    - 'bin/**'
    - 'Plugins/**'
    - '.github/**'
    - 'doc/**'
    - 'res/**'
    
jobs:
  build_Linux_Lumo:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: master
    - name: checkout submodules
      run : git submodule update --init --recursive 
    - name: Prepare Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.224.1
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true
    - name: Install Requirement for Glfw3
      run : sudo apt-get update && sudo apt-get install libgl1-mesa-dev libx11-dev libxi-dev libxrandr-dev libxinerama-dev libxcursor-dev libasound2-dev libomp-dev
    - name: configure
      run: mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release
    - name: build
      run: cmake --build build --config Release --target package
    - name: upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Lumo_Linux
        path: "bin/packages/Lumo_Linux*.zip"
    - name: upload cmake_install artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: cmake_install
        path: "build/cmake_install.cmake"
    - name: upload CMakeCache artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: CMakeCache
        path: "build/CMakeCache.txt"
    - name: upload config_app artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: config_app
        path: "build/config_app.h"
    - name: upload CPackConfig artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: CPackConfig
        path: "build/CPackConfig.cmake"
    - name: upload CPackSourceConfig artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: CPackSourceConfig
        path: "build/CPackSourceConfig.cmake"
    - name: upload install_manifest artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: install_manifest
        path: "build/install_manifest.txt"
